```yaml
name: Check and Build v2ray-stat

on:
  schedule:
    - cron: '0 0 * * *' # Запуск каждый день в 00:00 UTC
  workflow_dispatch: # Для ручного запуска

jobs:
  check-and-build:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
      fail-fast: false

    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0

    steps:
      - name: Create log directory
        run: |
          mkdir -p /tmp/v2ray-stat-builds
          echo "$(date): Starting check for new v2ray-stat tags" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log

      - name: Get latest tag from cortez24rus/v2ray-stat
        id: get_tag
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/cortez24rus/v2ray-stat/releases/latest | jq -r .tag_name)
          echo "Latest tag: $LATEST_TAG" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check if tag exists in current repo
        id: check_tag
        run: |
          TAG_EXISTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases | \
            jq -r ".[] | select(.tag_name == \"${{ steps.get_tag.outputs.tag }}\") | .tag_name")
          if [ -n "$TAG_EXISTS" ]; then
            echo "Tag ${{ steps.get_tag.outputs.tag }} already exists in this repo" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "New tag ${{ steps.get_tag.outputs.tag }} found" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Clone cortez24rus/v2ray-stat
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git clone --depth 1 --branch ${{ steps.get_tag.outputs.tag }} https://github.com/cortez24rus/v2ray-stat.git
          echo "$(date): Cloned cortez24rus/v2ray-stat at tag ${{ steps.get_tag.outputs.tag }}" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log

      - name: Set up Go
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/setup-go@v5
        with:
          go-version-file: v2ray-stat/go.mod
          check-latest: true

      - name: Get project dependencies
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          cd v2ray-stat
          go mod download
          echo "$(date): Downloaded dependencies for v2ray-stat" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log

      - name: Build v2ray-stat
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          cd v2ray-stat
          mkdir -p build_assets
          COMMID=$(git describe --always --dirty)
          BINARY_NAME="v2ray-stat_${GOOS}_${GOARCH}"
          echo "Building $BINARY_NAME..." >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log
          go build -o build_assets/$BINARY_NAME \
            -trimpath -buildvcs=false \
            -ldflags="-X main.Version=${COMMID} -s -w -buildid=" \
            -v .
          echo "$(date): Built $BINARY_NAME for tag ${{ steps.get_tag.outputs.tag }}" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log

      - name: Copy additional files
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          cd v2ray-stat
          cp .env build_assets/.env 2>/dev/null || true
          cp README.md build_assets/README.md 2>/dev/null || true
          cp LICENSE build_assets/LICENSE 2>/dev/null || true
          echo "$(date): Copied additional files to build_assets" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log

      - name: Create checksums
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          cd v2ray-stat/build_assets
          sha256sum * > checksums.txt
          echo "$(date): Created checksums for build assets" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log

      - name: Create release
        if: steps.check_tag.outputs.exists == 'false'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: v2ray-stat/build_assets/**
          file_glob: true
          tag: ${{ steps.get_tag.outputs.tag }}
          overwrite: true
          name: v2ray-stat ${{ steps.get_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log release creation
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          echo "$(date): Created release for tag ${{ steps.get_tag.outputs.tag }}" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log

      - name: Save logs
        if: always()
        run: |
          echo "$(date): Completed workflow run" >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log
          echo >> /tmp/v2ray-stat-builds/v2ray-stat-builds.log
          cat /tmp/v2ray-stat-builds/v2ray-stat-builds.log >> ${{ github.workspace }}/v2ray-stat-builds.log
```
